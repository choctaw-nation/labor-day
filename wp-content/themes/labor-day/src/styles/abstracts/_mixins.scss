@forward "./bs_breakpoints";
@use "./variables" as v;
@use "./functions" as fn;

@mixin d-flex(
	$direction: row,
	$main: flex-start,
	$cross: flex-start,
	$wrap: wrap
) {
	display: flex;
	flex-flow: $direction $wrap;
	justify-content: $main;
	align-items: $cross;
}

// @mixin fadeIn {
// 	animation: fadeInAnimation ease 0.5s;
// 	animation-iteration-count: 1;
// 	animation-fill-mode: forwards;

// 	@keyframes fadeInAnimation {
// 		0% {
// 			opacity: 0;
// 		}

// 		100% {
// 			opacity: 1;
// 		}
// 	}
// }

// @mixin dropShadow($color: black) {
// 	box-shadow: 2px 4px 8px rgba($color, 0.35);
// }

@mixin fit-media($selector: img, $fit: contain, $position: center) {
	#{$selector} {
		width: 100%;
		height: 100%;
		max-height: 31.25rem;
		object-fit: $fit;
		object-position: $position;
	}
}

@mixin anchor-hover-state($height: 3px, $width: 50%, $color: v.$color-primary) {
	&::after {
		background-color: $color;
		bottom: -5px;
		content: "";
		height: $height;
		left: 0;
		position: absolute;
		transform: scaleX(0);
		transform-origin: 0 0;
		transition: fn.transition(transform);
		width: $width;
	}
}
